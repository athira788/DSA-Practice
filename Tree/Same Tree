Problem: Given the roots of two binary trees p and q, write a function to check if they are the same or not.
Two binary trees are considered the same if they are structurally identical, and the nodes have the same value.

Example 1:
Input: p = [1,2,3], q = [1,2,3]
Output: true

Solution: We will iterate through each node compare the value, proceed to check the children as well.Time - O(n) and space - O(h)
class Solution:
    def isSameTree(self, p: Optional[TreeNode], q: Optional[TreeNode]) -> bool:
        if(not p and not q):
            return True
        if(not p or not q):
            return False
        if(p.val != q.val):
            return False
        if(p.val == q.val):
            return self.isSameTree(p.right,q.right) and self.isSameTree(p.left,q.left)
